---
const { projects } = Astro.props;
import type Project from "../types/Project";
---

<div class="projects-grid">
  {
    projects.map((project: Project) => (
      <div class="project">
        <a href={`/projects/${project.slug}`} class="block-link">
          <h4>{project.name}</h4>
          <p>{project.description}</p>
        </a>
        <div class="visit">
          <a href={project.url}>Visit</a>
        </div>
      </div>
    ))
  }
</div>

<style>
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 1rem;
  }

  @media (min-width: 768px) {
    .projects-grid {
      grid-template-columns: repeat(auto-fill, minmax(24rem, 1fr));
      gap: 4rem;
    }
  }

  .project {
    aspect-ratio: 2;
    padding: 1rem;
    border: 1px solid var(--accents-2);
    border-radius: 4px;
    transition-property: color, border-color, box-shadow;
    transition-duration: 300ms;
    transition-timing-function: ease;
    display: flex;
    flex-direction: column;

    a {
      flex-grow: 1;
    }

    & p {
      color: var(--accents-5);
    }
  }

  .project:hover {
    border-color: var(--accents-1);
    overflow: hidden;
    box-shadow: var(--shadow-small);

    & h4 {
      color: var(--theme-1);
    }

    /* inner shadow */
    .visit {
      a {
        color: var(--theme-1);
      }

      a::before,
      a::after {
        content: "-";
      }
    }
  }

  .visit {
    text-align: center;
    font-weight: 600;
    font-size: small;
    letter-spacing: 5px;
    text-transform: uppercase;

    a {
      display: block;
      color: var(--accents-4);
      text-decoration: none;
      transition: color 0.3s ease;
    }
  }

  :global(.dark) .project:hover {
    border-color: var(--theme-1);
    background-color: var(--accents-1);
  }
</style>
